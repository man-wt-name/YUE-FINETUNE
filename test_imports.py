#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏–º–ø–æ—Ä—Ç–æ–≤ –≤ –ø—Ä–æ–µ–∫—Ç–µ YuE
"""

import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É –≤ sys.path
project_root = os.path.dirname(os.path.abspath(__file__))
sys.path.insert(0, project_root)

def test_imports():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –≤—Å–µ –æ—Å–Ω–æ–≤–Ω—ã–µ –∏–º–ø–æ—Ä—Ç—ã –ø—Ä–æ–µ–∫—Ç–∞."""
    print("–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–º–ø–æ—Ä—Ç–æ–≤...")
    
    try:
        # –¢–µ—Å—Ç –æ—Å–Ω–æ–≤–Ω—ã—Ö –±–∏–±–ª–∏–æ—Ç–µ–∫
        print("‚úì –ò–º–ø–æ—Ä—Ç –æ—Å–Ω–æ–≤–Ω—ã—Ö –±–∏–±–ª–∏–æ—Ç–µ–∫...")
        import torch
        import transformers
        import numpy as np
        import librosa
        import soundfile
        print("  - torch:", torch.__version__)
        print("  - transformers:", transformers.__version__)
        print("  - numpy:", np.__version__)
        
        # –¢–µ—Å—Ç –º–æ–¥—É–ª–µ–π –ø—Ä–æ–µ–∫—Ç–∞
        print("\n‚úì –ò–º–ø–æ—Ä—Ç –º–æ–¥—É–ª–µ–π –ø—Ä–æ–µ–∫—Ç–∞...")
        
        # –¢–µ—Å—Ç core –º–æ–¥—É–ª–µ–π
        from finetune.core.arguments import parse_args
        print("  - core.arguments: OK")
        
        from finetune.core.datasets.indexed_dataset import MMapIndexedDataset
        print("  - core.datasets.indexed_dataset: OK")
        
        from finetune.core.datasets.gpt_dataset import GPTDataset
        print("  - core.datasets.gpt_dataset: OK")
        
        # –¢–µ—Å—Ç pipeline –º–æ–¥—É–ª–µ–π
        from finetune.pipeline.new_config import create_pipeline_config
        print("  - pipeline.new_config: OK")
        
        from finetune.pipeline.new_steps import AudioConverter, DataPreprocessor
        print("  - pipeline.new_steps: OK")
        
        # –¢–µ—Å—Ç tokenizer
        from finetune.core.tokenizer.mmtokenizer import _MMSentencePieceTokenizer
        print("  - core.tokenizer.mmtokenizer: OK")
        
        print("\n‚úÖ –í—Å–µ –∏–º–ø–æ—Ä—Ç—ã —É—Å–ø–µ—à–Ω—ã!")
        return True
        
    except ImportError as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}")
        return False
    except Exception as e:
        print(f"\n‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")
        return False

def test_cpp_helpers():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –∫–æ–º–ø–∏–ª—è—Ü–∏—é C++ —É—Å–∫–æ—Ä–∏—Ç–µ–ª–µ–π."""
    print("\n–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ C++ —É—Å–∫–æ—Ä–∏—Ç–µ–ª–µ–π...")
    
    try:
        from finetune.core.datasets.utils import compile_helpers
        compile_helpers()
        print("‚úÖ C++ —É—Å–∫–æ—Ä–∏—Ç–µ–ª–∏ —Å–∫–æ–º–ø–∏–ª–∏—Ä–æ–≤–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
        return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∫–æ–º–ø–∏–ª—è—Ü–∏–∏ C++ —É—Å–∫–æ—Ä–∏—Ç–µ–ª–µ–π: {e}")
        print("  –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã build-essential –∏ python3-dev")
        return False

if __name__ == "__main__":
    print("=" * 50)
    print("YuE - –¢–µ—Å—Ç –∏–º–ø–æ—Ä—Ç–æ–≤")
    print("=" * 50)
    
    imports_ok = test_imports()
    cpp_ok = test_cpp_helpers()
    
    print("\n" + "=" * 50)
    if imports_ok and cpp_ok:
        print("üéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã! –ü—Ä–æ–µ–∫—Ç –≥–æ—Ç–æ–≤ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é.")
    else:
        print("‚ö†Ô∏è  –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ—Å—Ç—ã –Ω–µ –ø—Ä–æ–π–¥–µ–Ω—ã. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —É—Å—Ç–∞–Ω–æ–≤–∫—É –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π.")
    print("=" * 50) 